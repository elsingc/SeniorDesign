Release 14.7 - xst P.20131013 (lin64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> 
Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.05 secs
 
--> 
Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.05 secs
 
--> 
Reading design: mojo_top.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "mojo_top.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "mojo_top"
Output Format                      : NGC
Target Device                      : xc6slx9-2-tqg144

---- Source Options
Top Module Name                    : mojo_top
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 16
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

---- Other Options
Cores Search Directories           : {".."  }

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "/home/zach/SeniorDesign/gps_rom.v" into library work
Parsing module <gps_rom>.
Analyzing Verilog file "/home/zach/SeniorDesign/src/serial_tx.v" into library work
Parsing module <serial_tx>.
Analyzing Verilog file "/home/zach/SeniorDesign/src/serial_rx.v" into library work
Parsing module <serial_rx>.
Analyzing Verilog file "/home/zach/SeniorDesign/serial_tx_dualspeed.v" into library work
Parsing module <serial_tx_dualspeed>.
Analyzing Verilog file "/home/zach/SeniorDesign/Sensor_Reg.v" into library work
Parsing module <Sensor_Reg>.
Analyzing Verilog file "/home/zach/SeniorDesign/IMU_Controller.v" into library work
Parsing module <IMU_Controller>.
Analyzing Verilog file "/home/zach/SeniorDesign/I2C_Driver.v" into library work
Parsing module <I2C_Driver>.
Analyzing Verilog file "/home/zach/SeniorDesign/GPS_Controller.v" into library work
Parsing module <GPS_Controller>.
Analyzing Verilog file "/home/zach/SeniorDesign/Data_Controller.v" into library work
Parsing module <Data_Controller>.
Analyzing Verilog file "/home/zach/SeniorDesign/Altimeter_Controller.v" into library work
Parsing module <Altimeter_Controller>.
Analyzing Verilog file "/home/zach/SeniorDesign/src/mojo_top.v" into library work
Parsing module <mojo_top>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================
WARNING:HDLCompiler:1016 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 91: Port gps_lon_submins is not connected to this instance

Elaborating module <mojo_top>.
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 43: Assignment to spi_miso ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 44: Assignment to avr_rx ignored, since the identifier is never used
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 45: Result of 4-bit expression is truncated to fit in 1-bit target.
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 45: Assignment to spi_channel ignored, since the identifier is never used

Elaborating module <Data_Controller>.

Elaborating module <serial_rx(CLK_PER_BIT=434,CTR_SIZE=13)>.

Elaborating module <serial_tx(CLK_PER_BIT=434,CTR_SIZE=13)>.

Elaborating module <Sensor_Reg>.

Elaborating module <Altimeter_Controller>.

Elaborating module <I2C_Driver>.
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/I2C_Driver.v" Line 149: Assignment to scl_repeated_start ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/I2C_Driver.v" Line 321: Assignment to sda_int_negedge ignored, since the identifier is never used

Elaborating module <IMU_Controller>.
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 188: Assignment to imu_ack_err ignored, since the identifier is never used

Elaborating module <serial_tx_dualspeed>.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/serial_tx_dualspeed.v" Line 39: Result of 32-bit expression is truncated to fit in 13-bit target.

Elaborating module <serial_rx(CLK_PER_BIT=434,CTR_SIZE=9)>.

Elaborating module <GPS_Controller>.

Elaborating module <gps_rom>.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/gps_rom.v" Line 38: Result of 32-bit expression is truncated to fit in 6-bit target.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/GPS_Controller.v" Line 115: Result of 7-bit expression is truncated to fit in 6-bit target.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/GPS_Controller.v" Line 118: Result of 3-bit expression is truncated to fit in 2-bit target.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/GPS_Controller.v" Line 129: Result of 25-bit expression is truncated to fit in 24-bit target.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/GPS_Controller.v" Line 143: Result of 8-bit expression is truncated to fit in 7-bit target.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/GPS_Controller.v" Line 154: Result of 32-bit expression is truncated to fit in 7-bit target.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/GPS_Controller.v" Line 155: Result of 32-bit expression is truncated to fit in 24-bit target.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/GPS_Controller.v" Line 163: Result of 32-bit expression is truncated to fit in 8-bit target.
WARNING:HDLCompiler:413 - "/home/zach/SeniorDesign/GPS_Controller.v" Line 164: Result of 32-bit expression is truncated to fit in 24-bit target.
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 223: Assignment to gps_status ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 225: Assignment to gps_status ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 226: Assignment to gps_lon_submins ignored, since the identifier is never used
WARNING:HDLCompiler:189 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 227: Size mismatch in connection of port <lat_deg>. Formal port size is 7-bit while actual signal size is 8-bit.
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 228: Assignment to gps_status ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 229: Assignment to gps_lat_submins ignored, since the identifier is never used
WARNING:HDLCompiler:634 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 57: Net <data_block> does not have a driver.
WARNING:HDLCompiler:634 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 198: Net <gps_tx_block> does not have a driver.
WARNING:HDLCompiler:552 - "/home/zach/SeniorDesign/src/mojo_top.v" Line 91: Input port gps_lon_submins[23] is not connected on this instance

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <mojo_top>.
    Related source file is "/home/zach/SeniorDesign/src/mojo_top.v".
WARNING:Xst:2898 - Port 'gps_lon_submins', unconnected in block instance 'Sensor_Reg', is tied to GND.
WARNING:Xst:2898 - Port 'gps_lat_submins', unconnected in block instance 'Sensor_Reg', is tied to GND.
WARNING:Xst:2898 - Port 'gps_status', unconnected in block instance 'Sensor_Reg', is tied to GND.
WARNING:Xst:2898 - Port 'air_speed_p', unconnected in block instance 'Sensor_Reg', is tied to GND.
WARNING:Xst:2898 - Port 'air_speed_n', unconnected in block instance 'Sensor_Reg', is tied to GND.
INFO:Xst:3210 - "/home/zach/SeniorDesign/src/mojo_top.v" line 59: Output port <debug> of the instance <Data_Controller> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/home/zach/SeniorDesign/src/mojo_top.v" line 180: Output port <ack_err> of the instance <IMU_I2C_Driver> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/home/zach/SeniorDesign/src/mojo_top.v" line 222: Output port <lon_submins> of the instance <GPS_Controller> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/home/zach/SeniorDesign/src/mojo_top.v" line 222: Output port <lat_submins> of the instance <GPS_Controller> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/home/zach/SeniorDesign/src/mojo_top.v" line 222: Output port <data_valid> of the instance <GPS_Controller> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/home/zach/SeniorDesign/src/mojo_top.v" line 222: Output port <lon_east> of the instance <GPS_Controller> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "/home/zach/SeniorDesign/src/mojo_top.v" line 222: Output port <lat_north> of the instance <GPS_Controller> is unconnected or connected to loadless signal.
WARNING:Xst:653 - Signal <data_block> is used but never assigned. This sourceless signal will be automatically connected to value GND.
WARNING:Xst:653 - Signal <gps_tx_block> is used but never assigned. This sourceless signal will be automatically connected to value GND.
    Summary:
	no macro.
Unit <mojo_top> synthesized.

Synthesizing Unit <Data_Controller>.
    Related source file is "/home/zach/SeniorDesign/Data_Controller.v".
WARNING:Xst:647 - Input <block> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 5-bit register for signal <state>.
    Found 1-bit register for signal <new_data_tx>.
    Found 8-bit register for signal <data_tx>.
    Found 8-bit register for signal <addr>.
    Found 8-bit register for signal <debug>.
    Found finite state machine <FSM_0> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 5                                              |
    | Transitions        | 17                                             |
    | Inputs             | 6                                              |
    | Outputs            | 8                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00000                                          |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 8-bit adder for signal <addr[7]_GND_2_o_add_9_OUT> created at line 73.
    Found 8-bit comparator greater for signal <n0010> created at line 69
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  25 D-type flip-flop(s).
	inferred   1 Comparator(s).
	inferred   7 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <Data_Controller> synthesized.

Synthesizing Unit <serial_rx_1>.
    Related source file is "/home/zach/SeniorDesign/src/serial_rx.v".
        CLK_PER_BIT = 434
        CTR_SIZE = 13
    Found 3-bit register for signal <bit_ctr_q>.
    Found 1-bit register for signal <new_data_q>.
    Found 2-bit register for signal <state_q>.
    Found 1-bit register for signal <rx_q>.
    Found 8-bit register for signal <data_q>.
    Found 13-bit register for signal <ctr_q>.
    Found finite state machine <FSM_1> for signal <state_q>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 9                                              |
    | Inputs             | 4                                              |
    | Outputs            | 2                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | synchronous                                    |
    | Reset State        | 00                                             |
    | Power Up State     | 00                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 13-bit adder for signal <ctr_q[12]_GND_3_o_add_7_OUT> created at line 52.
    Found 3-bit adder for signal <bit_ctr_q[2]_GND_3_o_add_9_OUT> created at line 55.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  26 D-type flip-flop(s).
	inferred   7 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <serial_rx_1> synthesized.

Synthesizing Unit <serial_tx>.
    Related source file is "/home/zach/SeniorDesign/src/serial_tx.v".
        CLK_PER_BIT = 434
        CTR_SIZE = 13
    Found 1-bit register for signal <tx_q>.
    Found 8-bit register for signal <data_q>.
    Found 3-bit register for signal <bit_ctr_q>.
    Found 13-bit register for signal <ctr_q>.
    Found 1-bit register for signal <busy_q>.
    Found 2-bit register for signal <state_q>.
    Found finite state machine <FSM_2> for signal <state_q>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 9                                              |
    | Inputs             | 3                                              |
    | Outputs            | 2                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | synchronous                                    |
    | Reset State        | 00                                             |
    | Power Up State     | 00                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 3-bit adder for signal <bit_ctr_q[2]_GND_4_o_add_13_OUT> created at line 71.
    Found 13-bit adder for signal <ctr_q[12]_GND_4_o_add_19_OUT> created at line 80.
    Found 1-bit 8-to-1 multiplexer for signal <bit_ctr_q[2]_data_q[7]_Mux_10_o> created at line 67.
    Found 13-bit 4-to-1 multiplexer for signal <ctr_d> created at line 39.
    WARNING:Xst:2404 -  FFs/Latches <block_q<0:0>> (without init value) have a constant value of 0 in block <serial_tx>.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  26 D-type flip-flop(s).
	inferred   4 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <serial_tx> synthesized.

Synthesizing Unit <Sensor_Reg>.
    Related source file is "/home/zach/SeniorDesign/Sensor_Reg.v".
WARNING:Xst:647 - Input <gps_lat_deg> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <gps_lat_submins> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <gps_time> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ground_speed> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <air_speed_p> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <air_speed_n> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 24-bit register for signal <int_pressure>.
    Found 16-bit register for signal <int_alt_temp>.
    Found 16-bit register for signal <int_gyro_temp>.
    Found 16-bit register for signal <int_gyro_x>.
    Found 16-bit register for signal <int_gyro_y>.
    Found 16-bit register for signal <int_gyro_z>.
    Found 16-bit register for signal <int_x_accl>.
    Found 16-bit register for signal <int_y_accl>.
    Found 16-bit register for signal <int_z_accl>.
    Found 16-bit register for signal <int_magm_x>.
    Found 16-bit register for signal <int_magm_y>.
    Found 16-bit register for signal <int_magm_z>.
WARNING:Xst:737 - Found 1-bit latch for signal <data<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <data<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <data<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <data<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <data<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <data<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <data<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <data<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred 200 D-type flip-flop(s).
	inferred   8 Latch(s).
	inferred  26 Multiplexer(s).
Unit <Sensor_Reg> synthesized.

Synthesizing Unit <Altimeter_Controller>.
    Related source file is "/home/zach/SeniorDesign/Altimeter_Controller.v".
WARNING:Xst:647 - Input <ack_err> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 8-bit register for signal <STATUS_REG>.
    Found 8-bit register for signal <data_wr>.
    Found 11-bit register for signal <state>.
    Found 1-bit register for signal <ena>.
    Found 1-bit register for signal <rw>.
    Found 1-bit register for signal <r_start>.
    Found 1-bit register for signal <start_transfer>.
    Found 1-bit register for signal <stop_transfer>.
    Found 1-bit register for signal <pressure<23>>.
    Found 1-bit register for signal <pressure<22>>.
    Found 1-bit register for signal <pressure<21>>.
    Found 1-bit register for signal <pressure<20>>.
    Found 1-bit register for signal <pressure<19>>.
    Found 1-bit register for signal <pressure<18>>.
    Found 1-bit register for signal <pressure<17>>.
    Found 1-bit register for signal <pressure<16>>.
    Found 1-bit register for signal <pressure<15>>.
    Found 1-bit register for signal <pressure<14>>.
    Found 1-bit register for signal <pressure<13>>.
    Found 1-bit register for signal <pressure<12>>.
    Found 1-bit register for signal <pressure<11>>.
    Found 1-bit register for signal <pressure<10>>.
    Found 1-bit register for signal <pressure<9>>.
    Found 1-bit register for signal <pressure<8>>.
    Found 1-bit register for signal <pressure<7>>.
    Found 1-bit register for signal <pressure<6>>.
    Found 1-bit register for signal <pressure<5>>.
    Found 1-bit register for signal <pressure<4>>.
    Found 1-bit register for signal <pressure<3>>.
    Found 1-bit register for signal <pressure<2>>.
    Found 1-bit register for signal <pressure<1>>.
    Found 1-bit register for signal <pressure<0>>.
    Found 1-bit register for signal <temp<15>>.
    Found 1-bit register for signal <temp<14>>.
    Found 1-bit register for signal <temp<13>>.
    Found 1-bit register for signal <temp<12>>.
    Found 1-bit register for signal <temp<11>>.
    Found 1-bit register for signal <temp<10>>.
    Found 1-bit register for signal <temp<9>>.
    Found 1-bit register for signal <temp<8>>.
    Found 1-bit register for signal <temp<7>>.
    Found 1-bit register for signal <temp<6>>.
    Found 1-bit register for signal <temp<5>>.
    Found 1-bit register for signal <temp<4>>.
    Found 1-bit register for signal <temp<3>>.
    Found 1-bit register for signal <temp<2>>.
    Found 1-bit register for signal <temp<1>>.
    Found 1-bit register for signal <temp<0>>.
    Found finite state machine <FSM_3> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 115                                            |
    | Transitions        | 388                                            |
    | Inputs             | 4                                              |
    | Outputs            | 130                                            |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00000000000                                    |
    | Power Up State     | 00000000000                                    |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Summary:
	inferred  61 D-type flip-flop(s).
	inferred  45 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <Altimeter_Controller> synthesized.

Synthesizing Unit <I2C_Driver>.
    Related source file is "/home/zach/SeniorDesign/I2C_Driver.v".
    Found 1-bit register for signal <sda_int>.
    Found 1-bit register for signal <busy>.
    Found 8-bit register for signal <count>.
    Found 10-bit register for signal <state>.
    Found 4-bit register for signal <bitcount>.
    Found 1-bit register for signal <scl_ena>.
    Found 1-bit register for signal <ack_err>.
    Found 1-bit register for signal <stretch>.
    Found 1-bit register for signal <Z_7_o_clk_DFF_135_q>.
    Found 1-bit register for signal <data_clk>.
    Found 1-bit register for signal <count[7]_clk_DFF_137>.
    Found 1-bit register for signal <ready>.
    Found 1-bit register for signal <scl_wait>.
    Found 1-bit register for signal <rstart_clk_high>.
    Found 8-bit register for signal <data_tx>.
    Found 8-bit register for signal <data_rd>.
    Found 8-bit register for signal <data_rx>.
INFO:Xst:1799 - State 0000000101 is never reached in FSM <state>.
    Found finite state machine <FSM_4> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 10                                             |
    | Transitions        | 22                                             |
    | Inputs             | 8                                              |
    | Outputs            | 16                                             |
    | Clock              | data_clk (rising_edge)                         |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | 0000000000                                     |
    | Power Up State     | 0000000000                                     |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 4-bit subtractor for signal <bitcount[3]_GND_16_o_sub_33_OUT> created at line 233.
    Found 8-bit adder for signal <count[7]_GND_16_o_add_9_OUT> created at line 102.
    Found 3-bit subtractor for signal <GND_16_o_GND_16_o_sub_31_OUT<2:0>> created at line 228.
    Found 1-bit 8-to-1 multiplexer for signal <GND_16_o_data_tx[7]_Mux_31_o> created at line 228.
    Found 1-bit tristate buffer for signal <SDA> created at line 75
    Found 1-bit tristate buffer for signal <SCL> created at line 76
    Found 1-bit tristate buffer for signal <scl_clk> created at line 94
    Found 8-bit comparator greater for signal <count[7]_GND_16_o_LessThan_13_o> created at line 104
    Found 8-bit comparator greater for signal <count[7]_GND_16_o_LessThan_15_o> created at line 111
    Found 8-bit comparator lessequal for signal <n0026> created at line 118
    Found 4-bit comparator lessequal for signal <n0123> created at line 332
    Summary:
	inferred   3 Adder/Subtractor(s).
	inferred  47 D-type flip-flop(s).
	inferred   4 Comparator(s).
	inferred  21 Multiplexer(s).
	inferred   3 Tristate(s).
	inferred   1 Finite State Machine(s).
Unit <I2C_Driver> synthesized.

Synthesizing Unit <IMU_Controller>.
    Related source file is "/home/zach/SeniorDesign/IMU_Controller.v".
    Found 11-bit register for signal <state>.
    Found 8-bit register for signal <data_wr>.
    Found 1-bit register for signal <rw>.
    Found 1-bit register for signal <start_transfer>.
    Found 1-bit register for signal <stop_transfer>.
    Found 1-bit register for signal <GYRO_TEMP<15>>.
    Found 1-bit register for signal <GYRO_TEMP<14>>.
    Found 1-bit register for signal <GYRO_TEMP<13>>.
    Found 1-bit register for signal <GYRO_TEMP<12>>.
    Found 1-bit register for signal <GYRO_TEMP<11>>.
    Found 1-bit register for signal <GYRO_TEMP<10>>.
    Found 1-bit register for signal <GYRO_TEMP<9>>.
    Found 1-bit register for signal <GYRO_TEMP<8>>.
    Found 1-bit register for signal <GYRO_TEMP<7>>.
    Found 1-bit register for signal <GYRO_TEMP<6>>.
    Found 1-bit register for signal <GYRO_TEMP<5>>.
    Found 1-bit register for signal <GYRO_TEMP<4>>.
    Found 1-bit register for signal <GYRO_TEMP<3>>.
    Found 1-bit register for signal <GYRO_TEMP<2>>.
    Found 1-bit register for signal <GYRO_TEMP<1>>.
    Found 1-bit register for signal <GYRO_TEMP<0>>.
    Found 1-bit register for signal <GYRO_X<15>>.
    Found 1-bit register for signal <GYRO_X<14>>.
    Found 1-bit register for signal <GYRO_X<13>>.
    Found 1-bit register for signal <GYRO_X<12>>.
    Found 1-bit register for signal <GYRO_X<11>>.
    Found 1-bit register for signal <GYRO_X<10>>.
    Found 1-bit register for signal <GYRO_X<9>>.
    Found 1-bit register for signal <GYRO_X<8>>.
    Found 1-bit register for signal <GYRO_X<7>>.
    Found 1-bit register for signal <GYRO_X<6>>.
    Found 1-bit register for signal <GYRO_X<5>>.
    Found 1-bit register for signal <GYRO_X<4>>.
    Found 1-bit register for signal <GYRO_X<3>>.
    Found 1-bit register for signal <GYRO_X<2>>.
    Found 1-bit register for signal <GYRO_X<1>>.
    Found 1-bit register for signal <GYRO_X<0>>.
    Found 1-bit register for signal <GYRO_Y<15>>.
    Found 1-bit register for signal <GYRO_Y<14>>.
    Found 1-bit register for signal <GYRO_Y<13>>.
    Found 1-bit register for signal <GYRO_Y<12>>.
    Found 1-bit register for signal <GYRO_Y<11>>.
    Found 1-bit register for signal <GYRO_Y<10>>.
    Found 1-bit register for signal <GYRO_Y<9>>.
    Found 1-bit register for signal <GYRO_Y<8>>.
    Found 1-bit register for signal <GYRO_Y<7>>.
    Found 1-bit register for signal <GYRO_Y<6>>.
    Found 1-bit register for signal <GYRO_Y<5>>.
    Found 1-bit register for signal <GYRO_Y<4>>.
    Found 1-bit register for signal <GYRO_Y<3>>.
    Found 1-bit register for signal <GYRO_Y<2>>.
    Found 1-bit register for signal <GYRO_Y<1>>.
    Found 1-bit register for signal <GYRO_Y<0>>.
    Found 1-bit register for signal <GYRO_Z<15>>.
    Found 1-bit register for signal <GYRO_Z<14>>.
    Found 1-bit register for signal <GYRO_Z<13>>.
    Found 1-bit register for signal <GYRO_Z<12>>.
    Found 1-bit register for signal <GYRO_Z<11>>.
    Found 1-bit register for signal <GYRO_Z<10>>.
    Found 1-bit register for signal <GYRO_Z<9>>.
    Found 1-bit register for signal <GYRO_Z<8>>.
    Found 1-bit register for signal <GYRO_Z<7>>.
    Found 1-bit register for signal <GYRO_Z<6>>.
    Found 1-bit register for signal <GYRO_Z<5>>.
    Found 1-bit register for signal <GYRO_Z<4>>.
    Found 1-bit register for signal <GYRO_Z<3>>.
    Found 1-bit register for signal <GYRO_Z<2>>.
    Found 1-bit register for signal <GYRO_Z<1>>.
    Found 1-bit register for signal <GYRO_Z<0>>.
    Found 1-bit register for signal <ACCL_X<15>>.
    Found 1-bit register for signal <ACCL_X<14>>.
    Found 1-bit register for signal <ACCL_X<13>>.
    Found 1-bit register for signal <ACCL_X<12>>.
    Found 1-bit register for signal <ACCL_X<11>>.
    Found 1-bit register for signal <ACCL_X<10>>.
    Found 1-bit register for signal <ACCL_X<9>>.
    Found 1-bit register for signal <ACCL_X<8>>.
    Found 1-bit register for signal <ACCL_X<7>>.
    Found 1-bit register for signal <ACCL_X<6>>.
    Found 1-bit register for signal <ACCL_X<5>>.
    Found 1-bit register for signal <ACCL_X<4>>.
    Found 1-bit register for signal <ACCL_X<3>>.
    Found 1-bit register for signal <ACCL_X<2>>.
    Found 1-bit register for signal <ACCL_X<1>>.
    Found 1-bit register for signal <ACCL_X<0>>.
    Found 1-bit register for signal <ACCL_Y<15>>.
    Found 1-bit register for signal <ACCL_Y<14>>.
    Found 1-bit register for signal <ACCL_Y<13>>.
    Found 1-bit register for signal <ACCL_Y<12>>.
    Found 1-bit register for signal <ACCL_Y<11>>.
    Found 1-bit register for signal <ACCL_Y<10>>.
    Found 1-bit register for signal <ACCL_Y<9>>.
    Found 1-bit register for signal <ACCL_Y<8>>.
    Found 1-bit register for signal <ACCL_Y<7>>.
    Found 1-bit register for signal <ACCL_Y<6>>.
    Found 1-bit register for signal <ACCL_Y<5>>.
    Found 1-bit register for signal <ACCL_Y<4>>.
    Found 1-bit register for signal <ACCL_Y<3>>.
    Found 1-bit register for signal <ACCL_Y<2>>.
    Found 1-bit register for signal <ACCL_Y<1>>.
    Found 1-bit register for signal <ACCL_Y<0>>.
    Found 1-bit register for signal <ACCL_Z<15>>.
    Found 1-bit register for signal <ACCL_Z<14>>.
    Found 1-bit register for signal <ACCL_Z<13>>.
    Found 1-bit register for signal <ACCL_Z<12>>.
    Found 1-bit register for signal <ACCL_Z<11>>.
    Found 1-bit register for signal <ACCL_Z<10>>.
    Found 1-bit register for signal <ACCL_Z<9>>.
    Found 1-bit register for signal <ACCL_Z<8>>.
    Found 1-bit register for signal <ACCL_Z<7>>.
    Found 1-bit register for signal <ACCL_Z<6>>.
    Found 1-bit register for signal <ACCL_Z<5>>.
    Found 1-bit register for signal <ACCL_Z<4>>.
    Found 1-bit register for signal <ACCL_Z<3>>.
    Found 1-bit register for signal <ACCL_Z<2>>.
    Found 1-bit register for signal <ACCL_Z<1>>.
    Found 1-bit register for signal <ACCL_Z<0>>.
    Found 1-bit register for signal <MAGM_X<15>>.
    Found 1-bit register for signal <MAGM_X<14>>.
    Found 1-bit register for signal <MAGM_X<13>>.
    Found 1-bit register for signal <MAGM_X<12>>.
    Found 1-bit register for signal <MAGM_X<11>>.
    Found 1-bit register for signal <MAGM_X<10>>.
    Found 1-bit register for signal <MAGM_X<9>>.
    Found 1-bit register for signal <MAGM_X<8>>.
    Found 1-bit register for signal <MAGM_X<7>>.
    Found 1-bit register for signal <MAGM_X<6>>.
    Found 1-bit register for signal <MAGM_X<5>>.
    Found 1-bit register for signal <MAGM_X<4>>.
    Found 1-bit register for signal <MAGM_X<3>>.
    Found 1-bit register for signal <MAGM_X<2>>.
    Found 1-bit register for signal <MAGM_X<1>>.
    Found 1-bit register for signal <MAGM_X<0>>.
    Found 1-bit register for signal <MAGM_Y<15>>.
    Found 1-bit register for signal <MAGM_Y<14>>.
    Found 1-bit register for signal <MAGM_Y<13>>.
    Found 1-bit register for signal <MAGM_Y<12>>.
    Found 1-bit register for signal <MAGM_Y<11>>.
    Found 1-bit register for signal <MAGM_Y<10>>.
    Found 1-bit register for signal <MAGM_Y<9>>.
    Found 1-bit register for signal <MAGM_Y<8>>.
    Found 1-bit register for signal <MAGM_Y<7>>.
    Found 1-bit register for signal <MAGM_Y<6>>.
    Found 1-bit register for signal <MAGM_Y<5>>.
    Found 1-bit register for signal <MAGM_Y<4>>.
    Found 1-bit register for signal <MAGM_Y<3>>.
    Found 1-bit register for signal <MAGM_Y<2>>.
    Found 1-bit register for signal <MAGM_Y<1>>.
    Found 1-bit register for signal <MAGM_Y<0>>.
    Found 1-bit register for signal <MAGM_Z<15>>.
    Found 1-bit register for signal <MAGM_Z<14>>.
    Found 1-bit register for signal <MAGM_Z<13>>.
    Found 1-bit register for signal <MAGM_Z<12>>.
    Found 1-bit register for signal <MAGM_Z<11>>.
    Found 1-bit register for signal <MAGM_Z<10>>.
    Found 1-bit register for signal <MAGM_Z<9>>.
    Found 1-bit register for signal <MAGM_Z<8>>.
    Found 1-bit register for signal <MAGM_Z<7>>.
    Found 1-bit register for signal <MAGM_Z<6>>.
    Found 1-bit register for signal <MAGM_Z<5>>.
    Found 1-bit register for signal <MAGM_Z<4>>.
    Found 1-bit register for signal <MAGM_Z<3>>.
    Found 1-bit register for signal <MAGM_Z<2>>.
    Found 1-bit register for signal <MAGM_Z<1>>.
    Found 1-bit register for signal <MAGM_Z<0>>.
    Found 1-bit register for signal <ena>.
    Found 1-bit register for signal <r_start>.
    Found finite state machine <FSM_5> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 340                                            |
    | Transitions        | 1118                                           |
    | Inputs             | 3                                              |
    | Outputs            | 357                                            |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00000000000                                    |
    | Power Up State     | 00000000000                                    |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Summary:
	inferred 173 D-type flip-flop(s).
	inferred 180 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <IMU_Controller> synthesized.

Synthesizing Unit <serial_tx_dualspeed>.
    Related source file is "/home/zach/SeniorDesign/serial_tx_dualspeed.v".
        CLK_PER_BIT_SLOW = 5208
        CLK_PER_BIT_FAST = 434
        CTR_SIZE = 13
    Found 1-bit register for signal <tx_q>.
    Found 1-bit register for signal <speed_q>.
    Found 8-bit register for signal <data_q>.
    Found 3-bit register for signal <bit_ctr_q>.
    Found 13-bit register for signal <ctr_q>.
    Found 1-bit register for signal <busy_q>.
    Found 2-bit register for signal <state_q>.
    Found finite state machine <FSM_6> for signal <state_q>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 9                                              |
    | Inputs             | 3                                              |
    | Outputs            | 2                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | synchronous                                    |
    | Reset State        | 00                                             |
    | Power Up State     | 00                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 14-bit subtractor for signal <GND_23_o_GND_23_o_sub_17_OUT> created at line 84.
    Found 3-bit adder for signal <bit_ctr_q[2]_GND_23_o_add_18_OUT> created at line 86.
    Found 13-bit adder for signal <ctr_q[12]_GND_23_o_add_24_OUT> created at line 95.
    Found 1-bit 8-to-1 multiplexer for signal <bit_ctr_q[2]_data_q[7]_Mux_14_o> created at line 82.
    Found 13-bit 4-to-1 multiplexer for signal <ctr_d> created at line 51.
    Found 1-bit comparator equal for signal <n0005> created at line 53
    Found 32-bit comparator equal for signal <GND_23_o_GND_23_o_equal_18_o> created at line 84
    WARNING:Xst:2404 -  FFs/Latches <block_q<0:0>> (without init value) have a constant value of 0 in block <serial_tx_dualspeed>.
    Summary:
	inferred   3 Adder/Subtractor(s).
	inferred  27 D-type flip-flop(s).
	inferred   2 Comparator(s).
	inferred   4 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <serial_tx_dualspeed> synthesized.

Synthesizing Unit <serial_rx_2>.
    Related source file is "/home/zach/SeniorDesign/src/serial_rx.v".
        CLK_PER_BIT = 434
        CTR_SIZE = 9
    Found 3-bit register for signal <bit_ctr_q>.
    Found 1-bit register for signal <new_data_q>.
    Found 2-bit register for signal <state_q>.
    Found 1-bit register for signal <rx_q>.
    Found 8-bit register for signal <data_q>.
    Found 9-bit register for signal <ctr_q>.
    Found finite state machine <FSM_7> for signal <state_q>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 9                                              |
    | Inputs             | 4                                              |
    | Outputs            | 2                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | synchronous                                    |
    | Reset State        | 00                                             |
    | Power Up State     | 00                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 9-bit adder for signal <ctr_q[8]_GND_24_o_add_7_OUT> created at line 52.
    Found 3-bit adder for signal <bit_ctr_q[2]_GND_24_o_add_9_OUT> created at line 55.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  22 D-type flip-flop(s).
	inferred   7 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <serial_rx_2> synthesized.

Synthesizing Unit <GPS_Controller>.
    Related source file is "/home/zach/SeniorDesign/GPS_Controller.v".
WARNING:Xst:653 - Signal <time_> is used but never assigned. This sourceless signal will be automatically connected to value GND.
WARNING:Xst:653 - Signal <ground_speed> is used but never assigned. This sourceless signal will be automatically connected to value GND.
    Found 6-bit register for signal <rom_index_q>.
    Found 3-bit register for signal <state_q>.
    Found 24-bit register for signal <send_wait_ctr_q>.
    Found 2-bit register for signal <rom_message_q>.
    Found 1-bit register for signal <tx_send_q>.
    Found finite state machine <FSM_8> for signal <state_q>.
    -----------------------------------------------------------------------
    | States             | 6                                              |
    | Transitions        | 16                                             |
    | Inputs             | 8                                              |
    | Outputs            | 4                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | 000                                            |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_167_OUT> created at line 154.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_169_OUT> created at line 154.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_171_OUT> created at line 155.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_173_OUT> created at line 156.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_176_OUT> created at line 157.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_179_OUT> created at line 158.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_182_OUT> created at line 159.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_185_OUT> created at line 160.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_188_OUT> created at line 163.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_190_OUT> created at line 163.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_193_OUT> created at line 163.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_195_OUT> created at line 164.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_197_OUT> created at line 165.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_200_OUT> created at line 166.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_203_OUT> created at line 167.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_206_OUT> created at line 168.
    Found 9-bit subtractor for signal <GND_25_o_GND_25_o_sub_209_OUT> created at line 169.
    Found 6-bit adder for signal <rom_index_q[5]_GND_25_o_add_9_OUT> created at line 115.
    Found 2-bit adder for signal <_n0822> created at line 118.
    Found 24-bit adder for signal <send_wait_ctr_q[23]_GND_25_o_add_20_OUT> created at line 129.
    Found 7-bit adder for signal <rx_size[6]_GND_25_o_add_158_OUT> created at line 143.
    Found 32-bit adder for signal <n0620> created at line 154.
    Found 32-bit adder for signal <n0725> created at line 155.
    Found 32-bit adder for signal <n0728> created at line 155.
    Found 32-bit adder for signal <n0731> created at line 155.
    Found 32-bit adder for signal <n0734> created at line 155.
    Found 32-bit adder for signal <n0636> created at line 155.
    Found 32-bit adder for signal <n0740> created at line 163.
    Found 32-bit adder for signal <n0643> created at line 163.
    Found 32-bit adder for signal <n0746> created at line 164.
    Found 32-bit adder for signal <n0749> created at line 164.
    Found 32-bit adder for signal <n0752> created at line 164.
    Found 32-bit adder for signal <n0755> created at line 164.
    Found 32-bit adder for signal <n0659> created at line 164.
    Found 32x4-bit multiplier for signal <n0618> created at line 154.
    Found 32x17-bit multiplier for signal <n0622> created at line 155.
    Found 32x14-bit multiplier for signal <n0624> created at line 156.
    Found 32x10-bit multiplier for signal <n0627> created at line 157.
    Found 32x7-bit multiplier for signal <n0630> created at line 158.
    Found 32x4-bit multiplier for signal <n0633> created at line 159.
    Found 32x7-bit multiplier for signal <n0638> created at line 163.
    Found 32x4-bit multiplier for signal <n0640> created at line 163.
    Found 32x17-bit multiplier for signal <n0645> created at line 164.
    Found 32x14-bit multiplier for signal <n0647> created at line 165.
    Found 32x10-bit multiplier for signal <n0650> created at line 166.
    Found 32x7-bit multiplier for signal <n0653> created at line 167.
    Found 32x4-bit multiplier for signal <n0656> created at line 168.
WARNING:Xst:737 - Found 1-bit latch for signal <data_valid>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_deg<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_deg<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_deg<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_deg<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_deg<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_deg<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_deg<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_submins<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lat_north>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_deg<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_deg<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_deg<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_deg<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_deg<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_deg<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_deg<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_deg<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_submins<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <lon_east>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<0><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<0><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<0><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<0><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<0><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<0><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<0><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<0><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<1><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<1><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<1><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<1><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<1><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<1><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<1><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<1><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<2><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<2><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<2><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<2><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<2><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<2><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<2><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<2><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<3><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<3><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<3><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<3><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<3><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<3><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<3><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<3><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<4><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<4><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<4><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<4><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<4><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<4><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<4><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<4><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<17><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<17><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<17><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<17><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<17><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<17><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<17><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<17><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<18><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<18><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<18><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<18><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<18><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<18><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<18><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<18><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<19><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<19><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<19><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<19><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<19><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<19><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<19><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<19><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<20><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<20><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<20><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<20><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<20><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<20><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<20><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<20><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<22><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<22><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<22><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<22><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<22><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<22><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<22><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<22><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<23><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<23><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<23><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<23><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<23><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<23><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<23><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<23><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<24><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<24><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<24><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<24><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<24><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<24><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<24><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<24><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<25><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<25><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<25><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<25><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<25><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<25><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<25><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<25><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<27><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<27><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<27><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<27><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<27><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<27><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<27><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<27><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<29><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<29><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<29><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<29><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<29><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<29><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<29><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<29><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<30><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<30><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<30><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<30><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<30><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<30><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<30><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<30><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<31><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<31><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<31><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<31><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<31><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<31><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<31><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<31><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<32><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<32><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<32><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<32><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<32><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<32><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<32><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<32><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<33><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<33><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<33><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<33><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<33><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<33><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<33><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<33><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<35><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<35><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<35><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<35><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<35><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<35><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<35><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<35><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<36><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<36><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<36><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<36><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<36><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<36><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<36><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<36><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<37><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<37><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<37><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<37><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<37><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<37><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<37><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<37><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<38><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<38><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<38><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<38><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<38><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<38><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<38><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<38><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<40><7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<40><6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<40><5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<40><4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<40><3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<40><2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<40><1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_buffer<40><0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_size<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_size<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_size<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_size<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_size<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_size<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <rx_size<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Found 2-bit comparator lessequal for signal <n0000> created at line 73
    Found 1-bit comparator equal for signal <tx_req_speed_tx_cur_speed_equal_8_o> created at line 107
    Found 6-bit comparator equal for signal <rom_index_q[5]_rom_length[5]_equal_11_o> created at line 116
    Summary:
	inferred  13 Multiplier(s).
	inferred  34 Adder/Subtractor(s).
	inferred  33 D-type flip-flop(s).
	inferred 265 Latch(s).
	inferred   3 Comparator(s).
	inferred  42 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <GPS_Controller> synthesized.

Synthesizing Unit <gps_rom>.
    Related source file is "/home/zach/SeniorDesign/gps_rom.v".
    Found 64x8-bit Read Only RAM for signal <index[5]_X_24_o_wide_mux_6_OUT>
    Found 4x32-bit Read Only RAM for signal <n0018>
    Found 32x16-bit Read Only RAM for signal <_n0075>
    Found 8-bit 4-to-1 multiplexer for signal <data> created at line 25.
    Summary:
	inferred   3 RAM(s).
	inferred   1 Multiplexer(s).
Unit <gps_rom> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 3
 32x16-bit single-port Read Only RAM                   : 1
 4x32-bit single-port Read Only RAM                    : 1
 64x8-bit single-port Read Only RAM                    : 1
# Multipliers                                          : 13
 32x10-bit multiplier                                  : 2
 32x14-bit multiplier                                  : 2
 32x17-bit multiplier                                  : 2
 32x4-bit multiplier                                   : 4
 32x7-bit multiplier                                   : 3
# Adders/Subtractors                                   : 50
 13-bit adder                                          : 3
 14-bit subtractor                                     : 1
 2-bit adder                                           : 1
 24-bit adder                                          : 1
 3-bit adder                                           : 4
 3-bit subtractor                                      : 2
 32-bit adder                                          : 13
 4-bit subtractor                                      : 2
 6-bit adder                                           : 1
 7-bit adder                                           : 1
 8-bit adder                                           : 3
 9-bit adder                                           : 1
 9-bit subtractor                                      : 17
# Registers                                            : 248
 1-bit register                                        : 203
 13-bit register                                       : 3
 16-bit register                                       : 12
 2-bit register                                        : 1
 24-bit register                                       : 3
 3-bit register                                        : 4
 4-bit register                                        : 2
 6-bit register                                        : 1
 8-bit register                                        : 18
 9-bit register                                        : 1
# Latches                                              : 273
 1-bit latch                                           : 273
# Comparators                                          : 14
 1-bit comparator equal                                : 2
 2-bit comparator lessequal                            : 1
 32-bit comparator equal                               : 1
 4-bit comparator lessequal                            : 2
 6-bit comparator equal                                : 1
 8-bit comparator greater                              : 5
 8-bit comparator lessequal                            : 2
# Multiplexers                                         : 365
 1-bit 2-to-1 multiplexer                              : 280
 1-bit 8-to-1 multiplexer                              : 4
 13-bit 2-to-1 multiplexer                             : 6
 13-bit 4-to-1 multiplexer                             : 2
 16-bit 2-to-1 multiplexer                             : 22
 24-bit 2-to-1 multiplexer                             : 4
 3-bit 2-to-1 multiplexer                              : 4
 4-bit 2-to-1 multiplexer                              : 2
 6-bit 2-to-1 multiplexer                              : 1
 8-bit 2-to-1 multiplexer                              : 35
 8-bit 4-to-1 multiplexer                              : 1
 9-bit 2-to-1 multiplexer                              : 4
# Tristates                                            : 6
 1-bit tristate buffer                                 : 6
# FSMs                                                 : 10

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

WARNING:Xst:2677 - Node <STATUS_REG_0> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_1> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_4> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_5> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_6> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_7> of sequential type is unconnected in block <Altimeter_Controller>.

Synthesizing (advanced) Unit <GPS_Controller>.
The following registers are absorbed into counter <rom_message_q>: 1 register on signal <rom_message_q>.
The following registers are absorbed into counter <send_wait_ctr_q>: 1 register on signal <send_wait_ctr_q>.
Unit <GPS_Controller> synthesized (advanced).

Synthesizing (advanced) Unit <I2C_Driver>.
The following registers are absorbed into counter <count>: 1 register on signal <count>.
The following registers are absorbed into counter <bitcount>: 1 register on signal <bitcount>.
Unit <I2C_Driver> synthesized (advanced).

Synthesizing (advanced) Unit <gps_rom>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_n0018> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 4-word x 32-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <message>       |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_index[5]_X_24_o_wide_mux_6_OUT> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 64-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <index>         |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram__n0075> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 32-word x 16-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <index<4:0>>    |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
Unit <gps_rom> synthesized (advanced).

Synthesizing (advanced) Unit <serial_rx_1>.
The following registers are absorbed into counter <bit_ctr_q>: 1 register on signal <bit_ctr_q>.
Unit <serial_rx_1> synthesized (advanced).

Synthesizing (advanced) Unit <serial_rx_2>.
The following registers are absorbed into counter <bit_ctr_q>: 1 register on signal <bit_ctr_q>.
Unit <serial_rx_2> synthesized (advanced).

Synthesizing (advanced) Unit <serial_tx>.
The following registers are absorbed into counter <bit_ctr_q>: 1 register on signal <bit_ctr_q>.
Unit <serial_tx> synthesized (advanced).

Synthesizing (advanced) Unit <serial_tx_dualspeed>.
The following registers are absorbed into counter <bit_ctr_q>: 1 register on signal <bit_ctr_q>.
Unit <serial_tx_dualspeed> synthesized (advanced).
WARNING:Xst:2677 - Node <STATUS_REG_0> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_1> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_4> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_5> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_6> of sequential type is unconnected in block <Altimeter_Controller>.
WARNING:Xst:2677 - Node <STATUS_REG_7> of sequential type is unconnected in block <Altimeter_Controller>.

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 3
 32x16-bit single-port distributed Read Only RAM       : 1
 4x32-bit single-port distributed Read Only RAM        : 1
 64x8-bit single-port distributed Read Only RAM        : 1
# Multipliers                                          : 13
 32x10-bit multiplier                                  : 2
 32x14-bit multiplier                                  : 2
 32x17-bit multiplier                                  : 2
 32x4-bit multiplier                                   : 4
 32x7-bit multiplier                                   : 3
# Adders/Subtractors                                   : 41
 13-bit adder                                          : 3
 14-bit subtractor                                     : 1
 2-bit adder                                           : 1
 24-bit adder                                          : 6
 3-bit subtractor                                      : 2
 32-bit adder                                          : 4
 6-bit adder                                           : 1
 7-bit adder                                           : 2
 7-bit subtractor                                      : 1
 8-bit adder                                           : 3
 8-bit subtractor                                      : 1
 9-bit adder                                           : 1
 9-bit subtractor                                      : 15
# Counters                                             : 10
 2-bit up counter                                      : 1
 24-bit up counter                                     : 1
 3-bit up counter                                      : 4
 4-bit down counter                                    : 2
 8-bit up counter                                      : 2
# Registers                                            : 619
 Flip-Flops                                            : 619
# Comparators                                          : 14
 1-bit comparator equal                                : 2
 2-bit comparator lessequal                            : 1
 32-bit comparator equal                               : 1
 4-bit comparator lessequal                            : 2
 6-bit comparator equal                                : 1
 8-bit comparator greater                              : 5
 8-bit comparator lessequal                            : 2
# Multiplexers                                         : 354
 1-bit 2-to-1 multiplexer                              : 278
 1-bit 8-to-1 multiplexer                              : 4
 13-bit 2-to-1 multiplexer                             : 6
 13-bit 4-to-1 multiplexer                             : 2
 16-bit 2-to-1 multiplexer                             : 22
 24-bit 2-to-1 multiplexer                             : 3
 6-bit 2-to-1 multiplexer                              : 1
 8-bit 2-to-1 multiplexer                              : 33
 8-bit 4-to-1 multiplexer                              : 1
 9-bit 2-to-1 multiplexer                              : 4
# FSMs                                                 : 10

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <Data_Controller/FSM_0> on signal <state[1:3]> with sequential encoding.
-------------------
 State | Encoding
-------------------
 00000 | 000
 00001 | 001
 00011 | 010
 00010 | 011
 00100 | 100
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <Data_serial_rx/FSM_1> on signal <state_q[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
 11    | 10
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <Data_serial_tx/FSM_2> on signal <state_q[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
 11    | 10
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <Altimeter_Controller/FSM_3> on signal <state[1:115]> with one-hot encoding.
------------------------------------------------------------------------------------------------------------------------------------
 State       | Encoding
------------------------------------------------------------------------------------------------------------------------------------
 00000000000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
 00000000001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
 00000000010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
 00000000011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000
 00000000100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000
 00000000101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000
 00000000110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000
 00000000111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000
 00000001000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000
 00000001001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000
 00000001010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000
 00000001011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000
 00000001100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000
 00000001101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000
 00000001110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000
 00000001111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000
 00000010000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000
 00000010001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000
 00000010010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000
 00000010011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000
 00000010100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000
 00000010101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000
 00000010110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000
 00000010111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000
 00000011000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000
 00000011001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000
 00000011010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
 00000011011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000
 00000011100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000
 00000011101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000
 00000011110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000
 00000011111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000
 00000100000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000
 00000100001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000
 00000100010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000
 00000100011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000
 00000100100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000
 00000100101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
 00000100110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
 00000100111 | 0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
 00000101000 | 0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
 00000101001 | 0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000
 00000101010 | 0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
 00000101011 | 0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
 00000101100 | 0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000
 00000101101 | 0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000
 00000101110 | 0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000
 00000101111 | 0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000
 00000110000 | 0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000
 00000110001 | 0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000
 00000110010 | 0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000
 00000110011 | 0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
 00000110100 | 0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000
 00000110101 | 0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000
 00000110110 | 0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
 00000110111 | 0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000
 00000111000 | 0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
 00000111001 | 0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000
 00000111010 | 0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000
 00000111011 | 0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000
 00000111100 | 0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000
 00000111101 | 0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
 00000111110 | 0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000
 00000111111 | 0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
 00001000000 | 0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000
 00001000001 | 0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000
 00001000010 | 0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000
 00001000011 | 0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
 00001000100 | 0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000
 00001000101 | 0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000
 00001000110 | 0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000
 00001000111 | 0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000
 00001001000 | 0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000
 00001001001 | 0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000
 00001001010 | 0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000
 00001001011 | 0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000
 00001001100 | 0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000
 00001001101 | 0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000
 00001001110 | 0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001001111 | 0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010000 | 0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010001 | 0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010010 | 0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010011 | 0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010100 | 0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010101 | 0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010110 | 0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010111 | 0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011000 | 0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011001 | 0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011010 | 0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011011 | 0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011100 | 0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011101 | 0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011110 | 0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011111 | 0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100000 | 0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100001 | 0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100010 | 0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100011 | 0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100100 | 0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100101 | 0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100110 | 0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100111 | 0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101000 | 0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101001 | 0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101010 | 0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101011 | 0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101100 | 0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101101 | 0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101110 | 0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101111 | 0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110000 | 0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110001 | 0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110010 | 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
------------------------------------------------------------------------------------------------------------------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <Alt_I2C_Driver/FSM_4> on signal <state[1:9]> with one-hot encoding.
Optimizing FSM <IMU_I2C_Driver/FSM_4> on signal <state[1:9]> with one-hot encoding.
-------------------------
 State      | Encoding
-------------------------
 0000000000 | 000000001
 0000000001 | 000000010
 0000000010 | 000000100
 0000000110 | 000001000
 0000001001 | 000010000
 0000000011 | 000100000
 0000000100 | 001000000
 0000000101 | unreached
 0000000111 | 010000000
 0000001000 | 100000000
-------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <IMU_Controller/FSM_5> on signal <state[1:340]> with one-hot encoding.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 State       | Encoding
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 00000000000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
 00000000001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
 00000000010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
 00000000011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000
 00000000100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000
 00000000101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000
 00000000110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000
 00000000111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000
 00000001000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000
 00000001001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000
 00000001010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000
 00000001011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000
 00000001100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000
 00000001101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000
 00000001110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000
 00000001111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000
 00000010000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000
 00000010001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000
 00000010010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000
 00000010011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000
 00000010100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000
 00000010101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000
 00000010110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000
 00000010111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000
 00000011000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000
 00000011001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000
 00000011010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
 00000011011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000
 00000011100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000
 00000011101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000
 00000011110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000
 00000011111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000
 00000100000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000
 00000100001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000
 00000100010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000
 00000100011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000
 00000100100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000
 00000100101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
 00000100110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
 00000100111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
 00000101000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
 00000101001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000
 00000101010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
 00000101011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
 00000101100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000
 00000101101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000
 00000101110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000
 00000101111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000
 00000110000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000
 00000110001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000
 00000110010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000
 00000110011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
 00000110100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000
 00000110101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000
 00000110110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
 00000110111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000
 00000111000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
 00000111001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000
 00000111010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000
 00000111011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000
 00000111100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000
 00000111101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
 00000111110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000
 00000111111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
 00001000000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000
 00001000001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000
 00001000010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000
 00001000011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
 00001000100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000
 00001000101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000
 00001000110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000
 00001000111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000
 00001001000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000
 00001001001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000
 00001001010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000
 00001001011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000
 00001001100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000
 00001001101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000
 00001001110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001001111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001010111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001011111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001100111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001101111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001110111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001111000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001111001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001111010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001111011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001111100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001111101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001111110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00001111111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010000000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010000001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010000010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010000011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010000100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010000101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010000110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010000111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010001000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010001001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010001010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010001011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010001100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010001101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010001110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010001111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010010000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010010001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010010010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010010011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010010100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010010101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010010110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010010111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010011000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010011001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010011010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010011011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010011100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010011101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010011110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010011111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010100000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010100001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010100010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010100011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010100100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010100101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010100110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010100111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010101000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010101001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010101010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010101011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010101100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010101101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010101110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010101111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010110000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010110001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010110010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010110011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010110100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010110101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010110110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010110111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010111000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010111001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010111010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010111011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010111100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010111101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010111110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00010111111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011000000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011000001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011000010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011000011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011000100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011000101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011000110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011000111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011001000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011001001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011001010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011001011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011001100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011001101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011001110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011001111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011010000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011010001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011010010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011010011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011010100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011010101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011010110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011010111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011011000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011011001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011011010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011011011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011011100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011011101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011011110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011011111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011100000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011100001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011100010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011100011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011100100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011100101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011100110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011100111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011101000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011101001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011101010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011101011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011101100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011101101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011101110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011101111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011110000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011110001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011110010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011110011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011110100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011110101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011110110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011110111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011111000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011111001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011111010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011111011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011111100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011111101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011111110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00011111111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100000000 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100000001 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100000010 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100000011 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100000100 | 0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100000101 | 0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100000110 | 0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100000111 | 0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100001000 | 0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100001001 | 0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100001010 | 0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100001011 | 0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100001100 | 0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100001101 | 0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100001110 | 0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100001111 | 0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100010000 | 0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100010001 | 0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100010010 | 0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100010011 | 0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100010100 | 0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100010101 | 0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100010110 | 0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100010111 | 0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100011000 | 0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100011001 | 0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100011010 | 0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100011011 | 0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100011100 | 0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100011101 | 0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100011110 | 0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100011111 | 0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100100000 | 0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100100001 | 0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100100010 | 0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100100011 | 0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100100100 | 0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100100101 | 0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100100110 | 0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100100111 | 0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100101000 | 0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100101001 | 0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100101010 | 0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100101011 | 0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100101100 | 0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100101101 | 0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100101110 | 0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100101111 | 0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100110000 | 0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100110001 | 0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100110010 | 0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100110011 | 0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100110100 | 0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100110101 | 0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100110110 | 0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100110111 | 0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100111000 | 0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100111001 | 0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100111010 | 0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100111011 | 0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100111100 | 0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100111101 | 0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100111110 | 0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00100111111 | 0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101000000 | 0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101000001 | 0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101000010 | 0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101000011 | 0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101000100 | 0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101000101 | 0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101000110 | 0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101000111 | 0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101001000 | 0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101001001 | 0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101001010 | 0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101001011 | 0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101001100 | 0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101001101 | 0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101001110 | 0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101001111 | 0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101010000 | 0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101010001 | 0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101010010 | 0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 00101010011 | 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <gps_serial_tx/FSM_6> on signal <state_q[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
 11    | 10
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <gps_serial_rx/FSM_7> on signal <state_q[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
 11    | 10
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <GPS_Controller/FSM_8> on signal <state_q[1:3]> with user encoding.
-------------------
 State | Encoding
-------------------
 000   | 000
 001   | 001
 010   | 010
 011   | 011
 100   | 100
 101   | 101
-------------------
WARNING:Xst:2677 - Node <rx_buffer<17>_7> of sequential type is unconnected in block <GPS_Controller>.
WARNING:Xst:2677 - Node <rx_buffer<29>_7> of sequential type is unconnected in block <GPS_Controller>.
WARNING:Xst:2677 - Node <rx_buffer<30>_7> of sequential type is unconnected in block <GPS_Controller>.
WARNING:Xst:2677 - Node <rx_buffer<17>_6> of sequential type is unconnected in block <GPS_Controller>.
WARNING:Xst:2677 - Node <rx_buffer<29>_6> of sequential type is unconnected in block <GPS_Controller>.
WARNING:Xst:2677 - Node <IMU_I2C_Driver/ack_err> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:3002 - This design contains one or more registers/latches that are directly
   incompatible with the Spartan6 architecture. The two primary causes of this is
   either a register or latch described with both an asynchronous set and
   asynchronous reset, or a register or latch described with an asynchronous
   set or reset which however has an initialization value of the opposite 
   polarity (i.e. asynchronous reset with an initialization value of 1).
    While this circuit can be built, it creates a sub-optimal implementation
   in terms of area, power and performance. For a more optimal implementation
   Xilinx highly recommends one of the following:

          1) Remove either the set or reset from all registers and latches
             if not needed for required functionality
          2) Modify the code in order to produce a synchronous set
             and/or reset (both is preferred)
          3) Ensure all registers have the same initialization value as the
             described asynchronous set or reset polarity
          4) Use the -async_to_sync option to transform the asynchronous
             set/reset to synchronous operation
             (timing simulation highly recommended when using this option)

  Please refer to http://www.xilinx.com search string "Spartan6 asynchronous set/reset" for more details.

  List of register instances with asynchronous set or reset and opposite initialization value:
    Alt_I2C_Driver/bitcount_0 in unit <mojo_top>
    Alt_I2C_Driver/bitcount_1 in unit <mojo_top>
    Alt_I2C_Driver/bitcount_2 in unit <mojo_top>
    IMU_I2C_Driver/bitcount_0 in unit <mojo_top>
    IMU_I2C_Driver/bitcount_1 in unit <mojo_top>
    IMU_I2C_Driver/bitcount_2 in unit <mojo_top>

WARNING:Xst:2042 - Unit mojo_top: 2 internal tristates are replaced by logic (pull-up yes): Alt_I2C_Driver/scl_clk, IMU_I2C_Driver/scl_clk.

Optimizing unit <mojo_top> ...

Optimizing unit <Data_Controller> ...

Optimizing unit <serial_rx_1> ...

Optimizing unit <serial_tx> ...

Optimizing unit <Sensor_Reg> ...

Optimizing unit <Altimeter_Controller> ...

Optimizing unit <IMU_Controller> ...

Optimizing unit <serial_tx_dualspeed> ...

Optimizing unit <serial_rx_2> ...

Optimizing unit <GPS_Controller> ...
WARNING:Xst:1710 - FF/Latch <gps_serial_tx/data_q_7> (without init value) has a constant value of 0 in block <mojo_top>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:2677 - Node <Alt_I2C_Driver/ack_err> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <Data_Controller/debug_7> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <Data_Controller/debug_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <Data_Controller/debug_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <Data_Controller/debug_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <Data_Controller/debug_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <Data_Controller/debug_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <Data_Controller/debug_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <Data_Controller/debug_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_8> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_9> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_7> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_11> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_12> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_10> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_13> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_14> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_16> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_17> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_15> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_19> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_20> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_18> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_22> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_23> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_submins_21> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_7> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_9> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_10> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_8> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_12> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_13> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_11> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_15> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_16> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_14> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_18> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_19> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_17> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_21> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_22> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_20> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_submins_23> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_deg_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_deg_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_deg_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_deg_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_deg_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_deg_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_deg_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/data_valid> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lat_north> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/lon_east> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<38>_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<40>_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<27>_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<25>_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<17>_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<18>_0> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<40>_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<38>_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<25>_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<27>_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<18>_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<17>_1> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<38>_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<40>_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<27>_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<25>_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<17>_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<18>_2> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<40>_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<38>_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<27>_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<25>_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<18>_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<17>_3> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<38>_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<40>_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<27>_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<25>_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<17>_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<18>_4> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<40>_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<38>_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<27>_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<25>_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<18>_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<17>_5> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<38>_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<40>_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<27>_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<25>_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<18>_6> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<40>_7> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<38>_7> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<27>_7> of sequential type is unconnected in block <mojo_top>.
WARNING:Xst:2677 - Node <GPS_Controller/rx_buffer<25>_7> of sequential type is unconnected in block <mojo_top>.

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block mojo_top, actual ratio is 44.
WARNING:Xst:1426 - The value init of the FF/Latch IMU_I2C_Driver/bitcount_2_LD hinder the constant cleaning in the block mojo_top.
   You should achieve better results by setting this init to 1.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 1163
 Flip-Flops                                            : 1163

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : mojo_top.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 2570
#      GND                         : 1
#      INV                         : 18
#      LUT1                        : 38
#      LUT2                        : 98
#      LUT3                        : 429
#      LUT4                        : 611
#      LUT5                        : 146
#      LUT6                        : 631
#      MUXCY                       : 435
#      MUXF7                       : 5
#      VCC                         : 1
#      XORCY                       : 157
# FlipFlops/Latches                : 1328
#      FD                          : 32
#      FDC                         : 657
#      FDCE                        : 58
#      FDE                         : 343
#      FDE_1                       : 16
#      FDP                         : 8
#      FDPE                        : 8
#      FDR                         : 11
#      FDRE                        : 28
#      FDS                         : 2
#      LD                          : 157
#      LDE_1                       : 8
# Clock Buffers                    : 4
#      BUFG                        : 3
#      BUFGP                       : 1
# IO Buffers                       : 17
#      IBUF                        : 3
#      IOBUF                       : 4
#      OBUF                        : 10
# DSPs                             : 16
#      DSP48A1                     : 16

Device utilization summary:
---------------------------

Selected Device : 6slx9tqg144-2 


Slice Logic Utilization: 
 Number of Slice Registers:            1328  out of  11440    11%  
 Number of Slice LUTs:                 1971  out of   5720    34%  
    Number used as Logic:              1971  out of   5720    34%  

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:   2246
   Number with an unused Flip Flop:     918  out of   2246    40%  
   Number with an unused LUT:           275  out of   2246    12%  
   Number of fully used LUT-FF pairs:  1053  out of   2246    46%  
   Number of unique control sets:        59

IO Utilization: 
 Number of IOs:                          18
 Number of bonded IOBs:                  18  out of    102    17%  

Specific Feature Utilization:
 Number of BUFG/BUFGCTRLs:                4  out of     16    25%  
 Number of DSP48A1s:                     16  out of     16   100%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
--------------------------------------------------------------------------------------------------------+----------------------------------------+-------+
Clock Signal                                                                                            | Clock buffer(FF name)                  | Load  |
--------------------------------------------------------------------------------------------------------+----------------------------------------+-------+
IMU_I2C_Driver/data_clk                                                                                 | BUFG                                   | 46    |
clk                                                                                                     | BUFGP                                  | 1071  |
Alt_I2C_Driver/data_clk                                                                                 | BUFG                                   | 46    |
rst_n                                                                                                   | IBUF+BUFG                              | 9     |
GPS_Controller/state_q[2]_GND_1122_o_Mux_2543_o(GPS_Controller/Mmux_state_q[2]_GND_1122_o_Mux_2543_o1:O)| NONE(*)(GPS_Controller/rx_size_0)      | 7     |
GPS_Controller/state_q[2]_GND_65_o_Mux_367_o(GPS_Controller/state_q[2]_GND_65_o_Mux_367_o_wg_cy<7>:O)   | NONE(*)(GPS_Controller/lon_deg_0)      | 8     |
GPS_Controller/state_q[2]_GND_394_o_Mux_1087_o(GPS_Controller/Mmux_state_q[2]_GND_394_o_Mux_1087_o11:O) | NONE(*)(GPS_Controller/rx_buffer<37>_0)| 8     |
GPS_Controller/state_q[2]_GND_378_o_Mux_1055_o(GPS_Controller/Mmux_state_q[2]_GND_378_o_Mux_1055_o11:O) | NONE(*)(GPS_Controller/rx_buffer<35>_0)| 8     |
GPS_Controller/state_q[2]_GND_362_o_Mux_1023_o(GPS_Controller/Mmux_state_q[2]_GND_362_o_Mux_1023_o11:O) | NONE(*)(GPS_Controller/rx_buffer<33>_0)| 8     |
GPS_Controller/state_q[2]_GND_386_o_Mux_1071_o(GPS_Controller/Mmux_state_q[2]_GND_386_o_Mux_1071_o11:O) | NONE(*)(GPS_Controller/rx_buffer<36>_0)| 8     |
GPS_Controller/state_q[2]_GND_346_o_Mux_991_o(GPS_Controller/Mmux_state_q[2]_GND_346_o_Mux_991_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<31>_0)| 8     |
GPS_Controller/state_q[2]_GND_338_o_Mux_975_o(GPS_Controller/Mmux_state_q[2]_GND_338_o_Mux_975_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<30>_0)| 7     |
GPS_Controller/state_q[2]_GND_354_o_Mux_1007_o(GPS_Controller/Mmux_state_q[2]_GND_354_o_Mux_1007_o11:O) | NONE(*)(GPS_Controller/rx_buffer<32>_0)| 8     |
GPS_Controller/state_q[2]_GND_330_o_Mux_959_o(GPS_Controller/Mmux_state_q[2]_GND_330_o_Mux_959_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<29>_0)| 6     |
GPS_Controller/state_q[2]_GND_282_o_Mux_863_o(GPS_Controller/Mmux_state_q[2]_GND_282_o_Mux_863_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<23>_0)| 8     |
GPS_Controller/state_q[2]_GND_274_o_Mux_847_o(GPS_Controller/Mmux_state_q[2]_GND_274_o_Mux_847_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<22>_0)| 8     |
GPS_Controller/state_q[2]_GND_290_o_Mux_879_o(GPS_Controller/Mmux_state_q[2]_GND_290_o_Mux_879_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<24>_0)| 8     |
GPS_Controller/state_q[2]_GND_258_o_Mux_815_o(GPS_Controller/Mmux_state_q[2]_GND_258_o_Mux_815_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<20>_0)| 8     |
GPS_Controller/state_q[2]_GND_250_o_Mux_799_o(GPS_Controller/Mmux_state_q[2]_GND_250_o_Mux_799_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<19>_0)| 8     |
GPS_Controller/state_q[2]_GND_130_o_Mux_559_o(GPS_Controller/Mmux_state_q[2]_GND_130_o_Mux_559_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<4>_0) | 8     |
GPS_Controller/state_q[2]_GND_114_o_Mux_527_o(GPS_Controller/Mmux_state_q[2]_GND_114_o_Mux_527_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<2>_0) | 8     |
GPS_Controller/state_q[2]_GND_106_o_Mux_511_o(GPS_Controller/Mmux_state_q[2]_GND_106_o_Mux_511_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<1>_0) | 8     |
GPS_Controller/state_q[2]_GND_122_o_Mux_543_o(GPS_Controller/Mmux_state_q[2]_GND_122_o_Mux_543_o11:O)   | NONE(*)(GPS_Controller/rx_buffer<3>_0) | 8     |
GPS_Controller/state_q[2]_GND_98_o_Mux_495_o(GPS_Controller/Mmux_state_q[2]_GND_98_o_Mux_495_o11:O)     | NONE(*)(GPS_Controller/rx_buffer<0>_0) | 8     |
--------------------------------------------------------------------------------------------------------+----------------------------------------+-------+
(*) These 20 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.
INFO:Xst:2169 - HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -2

   Minimum period: 8.472ns (Maximum Frequency: 118.043MHz)
   Minimum input arrival time before clock: 7.005ns
   Maximum output required time after clock: 5.866ns
   Maximum combinational path delay: No path found

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'IMU_I2C_Driver/data_clk'
  Clock period: 6.760ns (frequency: 147.929MHz)
  Total number of paths / destination ports: 419 / 69
-------------------------------------------------------------------------
Delay:               3.380ns (Levels of Logic = 2)
  Source:            IMU_I2C_Driver/bitcount_0_C_0 (FF)
  Destination:       IMU_I2C_Driver/data_rx_7 (FF)
  Source Clock:      IMU_I2C_Driver/data_clk rising
  Destination Clock: IMU_I2C_Driver/data_clk falling

  Data Path: IMU_I2C_Driver/bitcount_0_C_0 to IMU_I2C_Driver/data_rx_7
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q              3   0.525   0.874  IMU_I2C_Driver/bitcount_0_C_0 (IMU_I2C_Driver/bitcount_0_C_0)
     LUT3:I1->O           14   0.250   1.403  IMU_I2C_Driver/bitcount_01 (IMU_I2C_Driver/bitcount_0)
     LUT6:I2->O            1   0.254   0.000  IMU_I2C_Driver/Mmux_data_rx[7]_SDA_MUX_236_o11 (IMU_I2C_Driver/data_rx[7]_SDA_MUX_236_o)
     FDE_1:D                   0.074          IMU_I2C_Driver/data_rx_7
    ----------------------------------------
    Total                      3.380ns (1.103ns logic, 2.277ns route)
                                       (32.6% logic, 67.4% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 8.472ns (frequency: 118.043MHz)
  Total number of paths / destination ports: 340472 / 1206
-------------------------------------------------------------------------
Delay:               8.472ns (Levels of Logic = 32)
  Source:            IMU_Controller/state_FSM_FFd257 (FF)
  Destination:       IMU_Controller/data_wr_7 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: IMU_Controller/state_FSM_FFd257 to IMU_Controller/data_wr_7
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              8   0.525   1.374  IMU_Controller/state_FSM_FFd257 (IMU_Controller/state_FSM_FFd257)
     LUT6:I1->O            1   0.254   0.000  IMU_Controller/state_state[0]_wg_lut<2> (IMU_Controller/state_state[0]_wg_lut<2>)
     MUXCY:S->O            1   0.215   0.000  IMU_Controller/state_state[0]_wg_cy<2> (IMU_Controller/state_state[0]_wg_cy<2>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<3> (IMU_Controller/state_state[0]_wg_cy<3>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<4> (IMU_Controller/state_state[0]_wg_cy<4>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<5> (IMU_Controller/state_state[0]_wg_cy<5>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<6> (IMU_Controller/state_state[0]_wg_cy<6>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<7> (IMU_Controller/state_state[0]_wg_cy<7>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<8> (IMU_Controller/state_state[0]_wg_cy<8>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<9> (IMU_Controller/state_state[0]_wg_cy<9>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<10> (IMU_Controller/state_state[0]_wg_cy<10>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<11> (IMU_Controller/state_state[0]_wg_cy<11>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<12> (IMU_Controller/state_state[0]_wg_cy<12>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<13> (IMU_Controller/state_state[0]_wg_cy<13>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<14> (IMU_Controller/state_state[0]_wg_cy<14>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<15> (IMU_Controller/state_state[0]_wg_cy<15>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<16> (IMU_Controller/state_state[0]_wg_cy<16>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<17> (IMU_Controller/state_state[0]_wg_cy<17>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<18> (IMU_Controller/state_state[0]_wg_cy<18>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<19> (IMU_Controller/state_state[0]_wg_cy<19>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<20> (IMU_Controller/state_state[0]_wg_cy<20>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<21> (IMU_Controller/state_state[0]_wg_cy<21>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<22> (IMU_Controller/state_state[0]_wg_cy<22>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<23> (IMU_Controller/state_state[0]_wg_cy<23>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<24> (IMU_Controller/state_state[0]_wg_cy<24>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<25> (IMU_Controller/state_state[0]_wg_cy<25>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<26> (IMU_Controller/state_state[0]_wg_cy<26>)
     MUXCY:CI->O           1   0.023   0.000  IMU_Controller/state_state[0]_wg_cy<27> (IMU_Controller/state_state[0]_wg_cy<27>)
     MUXCY:CI->O          18   0.235   1.665  IMU_Controller/state_state[0]_wg_cy<28> (IMU_Controller/state[0])
     LUT6:I1->O            3   0.254   0.874  IMU_Controller/_n13768_inv11_SW0 (N166)
     LUT6:I4->O            1   0.250   0.790  IMU_Controller/_n13768_inv8_SW1 (N253)
     LUT6:I4->O            6   0.250   0.876  IMU_Controller/data_wr_7_rstpot_SW0 (N204)
     LUT6:I5->O            1   0.254   0.000  IMU_Controller/data_wr_7_rstpot (IMU_Controller/data_wr_7_rstpot)
     FDC:D                     0.074          IMU_Controller/data_wr_7
    ----------------------------------------
    Total                      8.472ns (2.893ns logic, 5.579ns route)
                                       (34.1% logic, 65.9% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'Alt_I2C_Driver/data_clk'
  Clock period: 6.760ns (frequency: 147.929MHz)
  Total number of paths / destination ports: 419 / 69
-------------------------------------------------------------------------
Delay:               3.380ns (Levels of Logic = 2)
  Source:            Alt_I2C_Driver/bitcount_0_C_0 (FF)
  Destination:       Alt_I2C_Driver/data_rx_7 (FF)
  Source Clock:      Alt_I2C_Driver/data_clk rising
  Destination Clock: Alt_I2C_Driver/data_clk falling

  Data Path: Alt_I2C_Driver/bitcount_0_C_0 to Alt_I2C_Driver/data_rx_7
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q              3   0.525   0.874  Alt_I2C_Driver/bitcount_0_C_0 (Alt_I2C_Driver/bitcount_0_C_0)
     LUT3:I1->O           14   0.250   1.403  Alt_I2C_Driver/bitcount_01 (Alt_I2C_Driver/bitcount_0)
     LUT6:I2->O            1   0.254   0.000  Alt_I2C_Driver/Mmux_data_rx[7]_SDA_MUX_236_o11 (Alt_I2C_Driver/data_rx[7]_SDA_MUX_236_o)
     FDE_1:D                   0.074          Alt_I2C_Driver/data_rx_7
    ----------------------------------------
    Total                      3.380ns (1.103ns logic, 2.277ns route)
                                       (32.6% logic, 67.4% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'GPS_Controller/state_q[2]_GND_1122_o_Mux_2543_o'
  Clock period: 3.483ns (frequency: 287.109MHz)
  Total number of paths / destination ports: 28 / 7
-------------------------------------------------------------------------
Delay:               3.483ns (Levels of Logic = 2)
  Source:            GPS_Controller/rx_size_4 (LATCH)
  Destination:       GPS_Controller/rx_size_5 (LATCH)
  Source Clock:      GPS_Controller/state_q[2]_GND_1122_o_Mux_2543_o falling
  Destination Clock: GPS_Controller/state_q[2]_GND_1122_o_Mux_2543_o falling

  Data Path: GPS_Controller/rx_size_4 to GPS_Controller/rx_size_5
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     LD:G->Q              13   0.581   1.528  GPS_Controller/rx_size_4 (GPS_Controller/rx_size_4)
     LUT5:I0->O            2   0.254   0.834  GPS_Controller/Madd_rx_size[6]_GND_25_o_add_158_OUT_cy<4>11 (GPS_Controller/Madd_rx_size[6]_GND_25_o_add_158_OUT_cy<4>)
     LUT3:I1->O            1   0.250   0.000  GPS_Controller/Mmux_state_q[2]_rx_size[5]_Mux_2544_o11 (GPS_Controller/state_q[2]_rx_size[5]_Mux_2544_o)
     LD:D                      0.036          GPS_Controller/rx_size_5
    ----------------------------------------
    Total                      3.483ns (1.121ns logic, 2.362ns route)
                                       (32.2% logic, 67.8% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'IMU_I2C_Driver/data_clk'
  Total number of paths / destination ports: 51 / 51
-------------------------------------------------------------------------
Offset:              7.005ns (Levels of Logic = 2)
  Source:            rst_n (PAD)
  Destination:       IMU_I2C_Driver/state_FSM_FFd1 (FF)
  Destination Clock: IMU_I2C_Driver/data_clk rising

  Data Path: rst_n to IMU_I2C_Driver/state_FSM_FFd1
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O           263   1.328   2.432  rst_n_IBUF (Alt_I2C_Driver/rst_inv)
     INV:I->O            772   0.255   2.532  Alt_I2C_Driver/rst_inv_BUFG_LUT1_INV_0 (Alt_I2C_Driver/rst_inv_BUFG_LUT1)
     FDP:PRE                   0.459          IMU_I2C_Driver/sda_int
    ----------------------------------------
    Total                      7.005ns (2.042ns logic, 4.963ns route)
                                       (29.1% logic, 70.9% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 1008 / 1008
-------------------------------------------------------------------------
Offset:              7.005ns (Levels of Logic = 2)
  Source:            rst_n (PAD)
  Destination:       IMU_I2C_Driver/count_7 (FF)
  Destination Clock: clk rising

  Data Path: rst_n to IMU_I2C_Driver/count_7
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O           263   1.328   2.432  rst_n_IBUF (Alt_I2C_Driver/rst_inv)
     INV:I->O            772   0.255   2.532  Alt_I2C_Driver/rst_inv_BUFG_LUT1_INV_0 (Alt_I2C_Driver/rst_inv_BUFG_LUT1)
     FDCE:CLR                  0.459          IMU_I2C_Driver/count_0
    ----------------------------------------
    Total                      7.005ns (2.042ns logic, 4.963ns route)
                                       (29.1% logic, 70.9% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'Alt_I2C_Driver/data_clk'
  Total number of paths / destination ports: 51 / 51
-------------------------------------------------------------------------
Offset:              7.005ns (Levels of Logic = 2)
  Source:            rst_n (PAD)
  Destination:       Alt_I2C_Driver/state_FSM_FFd1 (FF)
  Destination Clock: Alt_I2C_Driver/data_clk rising

  Data Path: rst_n to Alt_I2C_Driver/state_FSM_FFd1
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O           263   1.328   2.432  rst_n_IBUF (Alt_I2C_Driver/rst_inv)
     INV:I->O            772   0.255   2.532  Alt_I2C_Driver/rst_inv_BUFG_LUT1_INV_0 (Alt_I2C_Driver/rst_inv_BUFG_LUT1)
     FDP:PRE                   0.459          Alt_I2C_Driver/sda_int
    ----------------------------------------
    Total                      7.005ns (2.042ns logic, 4.963ns route)
                                       (29.1% logic, 70.9% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'Alt_I2C_Driver/data_clk'
  Total number of paths / destination ports: 5 / 2
-------------------------------------------------------------------------
Offset:              5.866ns (Levels of Logic = 2)
  Source:            Alt_I2C_Driver/state_FSM_FFd8 (FF)
  Destination:       alt_sda_out (PAD)
  Source Clock:      Alt_I2C_Driver/data_clk rising

  Data Path: Alt_I2C_Driver/state_FSM_FFd8 to alt_sda_out
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q             11   0.525   1.494  Alt_I2C_Driver/state_FSM_FFd8 (Alt_I2C_Driver/state_FSM_FFd8)
     LUT6:I0->O            1   0.254   0.681  Alt_I2C_Driver/Mmux_sda_ena_n111 (Alt_I2C_Driver/sda_ena_n)
     IOBUF:T->IO               2.912          alt_sda_out_IOBUF (alt_sda_out)
    ----------------------------------------
    Total                      5.866ns (3.691ns logic, 2.175ns route)
                                       (62.9% logic, 37.1% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 10 / 6
-------------------------------------------------------------------------
Offset:              5.317ns (Levels of Logic = 2)
  Source:            Altimeter_Controller/rw (FF)
  Destination:       alt_sda_out (PAD)
  Source Clock:      clk rising

  Data Path: Altimeter_Controller/rw to alt_sda_out
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              5   0.525   0.949  Altimeter_Controller/rw (Altimeter_Controller/rw)
     LUT6:I4->O            1   0.250   0.681  Alt_I2C_Driver/Mmux_sda_ena_n111 (Alt_I2C_Driver/sda_ena_n)
     IOBUF:T->IO               2.912          alt_sda_out_IOBUF (alt_sda_out)
    ----------------------------------------
    Total                      5.317ns (3.687ns logic, 1.630ns route)
                                       (69.3% logic, 30.7% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'IMU_I2C_Driver/data_clk'
  Total number of paths / destination ports: 5 / 2
-------------------------------------------------------------------------
Offset:              5.866ns (Levels of Logic = 2)
  Source:            IMU_I2C_Driver/state_FSM_FFd8 (FF)
  Destination:       imu_sda_out (PAD)
  Source Clock:      IMU_I2C_Driver/data_clk rising

  Data Path: IMU_I2C_Driver/state_FSM_FFd8 to imu_sda_out
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q             11   0.525   1.494  IMU_I2C_Driver/state_FSM_FFd8 (IMU_I2C_Driver/state_FSM_FFd8)
     LUT6:I0->O            1   0.254   0.681  IMU_I2C_Driver/Mmux_sda_ena_n111 (IMU_I2C_Driver/sda_ena_n)
     IOBUF:T->IO               2.912          imu_sda_out_IOBUF (imu_sda_out)
    ----------------------------------------
    Total                      5.866ns (3.691ns logic, 2.175ns route)
                                       (62.9% logic, 37.1% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock Alt_I2C_Driver/data_clk
-----------------------+---------+---------+---------+---------+
                       | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock           |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-----------------------+---------+---------+---------+---------+
Alt_I2C_Driver/data_clk|    6.036|    1.324|    3.380|         |
clk                    |    2.865|         |    3.026|         |
rst_n                  |    6.540|         |    3.844|         |
-----------------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_106_o_Mux_511_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_1122_o_Mux_2543_o
-----------------------------------------------+---------+---------+---------+---------+
                                               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock                                   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-----------------------------------------------+---------+---------+---------+---------+
GPS_Controller/state_q[2]_GND_1122_o_Mux_2543_o|         |         |    3.483|         |
clk                                            |         |         |    2.580|         |
-----------------------------------------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_114_o_Mux_527_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_122_o_Mux_543_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_130_o_Mux_559_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_250_o_Mux_799_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_258_o_Mux_815_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_274_o_Mux_847_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_282_o_Mux_863_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_290_o_Mux_879_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_330_o_Mux_959_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_338_o_Mux_975_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_346_o_Mux_991_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_354_o_Mux_1007_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_362_o_Mux_1023_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_378_o_Mux_1055_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_386_o_Mux_1071_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_394_o_Mux_1087_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_65_o_Mux_367_o
---------------------------------------------+---------+---------+---------+---------+
                                             | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock                                 |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------------------------------------+---------+---------+---------+---------+
GPS_Controller/state_q[2]_GND_330_o_Mux_959_o|         |         |    7.543|         |
GPS_Controller/state_q[2]_GND_338_o_Mux_975_o|         |         |    8.289|         |
GPS_Controller/state_q[2]_GND_346_o_Mux_991_o|         |         |    6.076|         |
---------------------------------------------+---------+---------+---------+---------+

Clock to Setup on destination clock GPS_Controller/state_q[2]_GND_98_o_Mux_495_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.940|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock IMU_I2C_Driver/data_clk
-----------------------+---------+---------+---------+---------+
                       | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock           |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-----------------------+---------+---------+---------+---------+
IMU_I2C_Driver/data_clk|    6.036|    1.324|    3.380|         |
clk                    |    2.900|         |    3.026|         |
rst_n                  |    6.540|         |    3.844|         |
-----------------------+---------+---------+---------+---------+

Clock to Setup on destination clock clk
-----------------------+---------+---------+---------+---------+
                       | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock           |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-----------------------+---------+---------+---------+---------+
Alt_I2C_Driver/data_clk|    4.617|         |         |         |
IMU_I2C_Driver/data_clk|    7.256|         |         |         |
clk                    |    8.472|         |         |         |
rst_n                  |         |    2.021|         |         |
-----------------------+---------+---------+---------+---------+

Clock to Setup on destination clock rst_n
--------------------------------------------+---------+---------+---------+---------+
                                            | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock                                |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
--------------------------------------------+---------+---------+---------+---------+
GPS_Controller/state_q[2]_GND_65_o_Mux_367_o|         |         |    3.023|         |
clk                                         |         |         |    5.740|         |
--------------------------------------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 42.00 secs
Total CPU time to Xst completion: 40.66 secs
 
--> 


Total memory usage is 457328 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :  453 (   0 filtered)
Number of infos    :   12 (   0 filtered)

